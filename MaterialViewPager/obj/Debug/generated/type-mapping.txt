com/github/florent37/materialviewpager/BuildConfig = Com.Github.Florent37.Materialviewpager.BuildConfig
  <init>()V = .ctor()
  APPLICATION_ID = ApplicationId
  BUILD_TYPE = BuildType
  DEBUG = Debug
  FLAVOR = Flavor
  VERSION_CODE = VersionCode
  VERSION_NAME = VersionName
com/github/florent37/materialviewpager/header/HeaderDesign = Com.Github.Florent37.Materialviewpager.Header.HeaderDesign
  color = Color
  colorRes = ColorRes
  drawable = Drawable
  imageUrl = ImageUrl
  getColor()I = Color
  getColorRes()I = ColorRes
  getDrawable()Landroid/graphics/drawable/Drawable; = Drawable
  getImageUrl()Ljava/lang/String; = ImageUrl
  fromColorAndDrawable(ILandroid/graphics/drawable/Drawable;)Lcom/github/florent37/materialviewpager/header/HeaderDesign; = FromColorAndDrawable(int, Android.Graphics.Drawables.Drawable)
  fromColorAndUrl(ILjava/lang/String;)Lcom/github/florent37/materialviewpager/header/HeaderDesign; = FromColorAndUrl(int, string)
  fromColorResAndDrawable(ILandroid/graphics/drawable/Drawable;)Lcom/github/florent37/materialviewpager/header/HeaderDesign; = FromColorResAndDrawable(int, Android.Graphics.Drawables.Drawable)
  fromColorResAndUrl(ILjava/lang/String;)Lcom/github/florent37/materialviewpager/header/HeaderDesign; = FromColorResAndUrl(int, string)
com/github/florent37/materialviewpager/MaterialViewPagerHeaderView = Com.Github.Florent37.Materialviewpager.MaterialViewPagerHeaderView
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;I)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet, int)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;II)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet, int, int)
com/github/florent37/materialviewpager/MaterialViewPagerSettings = Com.Github.Florent37.Materialviewpager.MaterialViewPagerSettings
  <init>()V = .ctor()
  animatedHeaderImage = AnimatedHeaderImage
  color = Color
  CREATOR = Creator
  disableToolbar = DisableToolbar
  displayToolbarWhenSwipe = DisplayToolbarWhenSwipe
  enableToolbarElevation = EnableToolbarElevation
  headerAdditionalHeight = HeaderAdditionalHeight
  headerAlpha = HeaderAlpha
  headerHeight = HeaderHeight
  headerHeightPx = HeaderHeightPx
  headerLayoutId = HeaderLayoutId
  hideLogoWithFade = HideLogoWithFade
  hideToolbarAndTitle = HideToolbarAndTitle
  imageHeaderDarkLayerAlpha = ImageHeaderDarkLayerAlpha
  logoLayoutId = LogoLayoutId
  logoMarginTop = LogoMarginTop
  pagerTitleStripId = PagerTitleStripId
  parallaxHeaderFactor = ParallaxHeaderFactor
  toolbarTransparent = ToolbarTransparent
  viewpagerId = ViewpagerId
  describeContents()I = DescribeContents()
  handleAttributes(Landroid/content/Context;Landroid/util/AttributeSet;)V = HandleAttributes(Android.Content.Context, Android.Util.IAttributeSet)
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/github/florent37/materialviewpager/Utils = Com.Github.Florent37.Materialviewpager.Utils
  <init>()V = .ctor()
  canScroll(Landroid/view/View;)Z = CanScroll(Android.Views.View)
  colorWithAlpha(IF)I = ColorWithAlpha(int, float)
  dpToPx(FLandroid/content/Context;)F = DpToPx(float, Android.Content.Context)
  getTheVisibileView(Ljava/util/List;)Landroid/view/View; = GetTheVisibileView(System.Collections.Generic.IList<Android.Views.View>)
  minMax(FFF)F = MinMax(float, float, float)
  pxToDp(FLandroid/content/Context;)F = PxToDp(float, Android.Content.Context)
  scrollTo(Ljava/lang/Object;F)V = ScrollTo(Java.Lang.Object, float)
  setBackgroundColor(I[Landroid/view/View;)V = SetBackgroundColor(int, params Android.Views.View[])
  setElevation(F[Landroid/view/View;)V = SetElevation(float, params Android.Views.View[])
  setScale(F[Landroid/view/View;)V = SetScale(float, params Android.Views.View[])
